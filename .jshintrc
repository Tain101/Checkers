{
    // Settings
    "passfail"      : false,  // Stop on first error.
    "maxerr"        : 100,    // Maximum errors before stopping.


    // Predefined globals whom JSHint will ignore.
    "browser"       : true,   // Standard browser globals e.g. `window`, `document`.

    "node"          : true,
    "rhino"         : false,
    "couch"         : false,
    "wsh"           : true,   // Windows Scripting Host.

    "jquery"        : true,
    "prototypejs"   : false,
    "mootools"      : false,
    "dojo"          : false,

    "predef"        : [  // Extra globals.
        "describe",   // Used by mocha
        "it",         // Used by mocha
        "before",     // Used by mocha
        "beforeEach", // Used by mocha
        "after",      // Used by mocha
        "afterEach"   // Used by mocha
    ],


    // Development.
    "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
    "devel"         : true,   // Allow development statements e.g. `console.log();`.


    // EcmaScript 5.
    //"es5"           : true,   // Allow EcmaScript 5 syntax.
    "globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').


    // The Good Parts.
    "asi"           : false,  // Tolerate Automatic Semicolon Insertion (no semicolons).
    "laxbreak"      : false,  // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "bitwise"       : false,  // Prohibit bitwise operators (&, |, ^, etc.).
    "boss"          : true,   // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "curly"         : false,   // Require {} for every new block or scope.
    "eqeqeq"        : true,   // Require triple equals i.e. `===`.
    "eqnull"        : false,  // Tolerate use of `== null`.
    "evil"          : false,  // Tolerate use of `eval`.
    "expr"          : true,   // Tolerate `ExpressionStatement` as Programs.
    "forin"         : true,  // Tolerate `for in` loops without `hasOwnPrototype`.
    "loopfunc"      : true,   // Allow functions to be defined within loops.
    "proto"         : true,   // Tolerate the __proto__ property.
    "regexp"        : false,  // Prohibit `.` and `[^...]` in regular expressions.
    "regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl"     : true,   // Tolerate script-targeted URLs.
    "smarttabs"     : false,  // This option suppresses warnings about mixed tabs and spaces when the latter are used for alignmnent only.
    "shadow"        : true,   // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "supernew"      : true,   // Tolerate `new function () { ... };` and `new Object;`.


    // Persone styling prefrences.
    "nomen"         : true,  // Prohibit use of initial or trailing underbars in names.
    "onevar"        : false,  // Allow only one `var` statement per function.
    "sub"           : true,  // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "trailing"      : true,   // Prohibit trailing whitespaces.
    "white"         : true,   // Check against strict whitespace and indentation rules.

    //added by me.
    "laxcomma"      : false,  // true: Tolerate comma-first style coding
    "camelcase"     : true,    // true: Identifiers must be in camelCase

    "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "immed"         : true,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "indent"        : 1,        // {int} Number of spaces to use for indentation
    "latedef"       : true,    // true: Require variables/functions to be defined before being used
    "newcap"        : true,    // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters.
    "nonew"         : true,    // true: Prohibit use of constructors for side-effects (without assignment)
    "plusplus"      : false,    // true: Prohibit use of `++` & `--`
    "quotmark"      : "double",    // Quotation mark consistency:
                                //   false    : do nothing (default)
                                //   true     : ensure whatever is used is consistent
                                //   "single" : require single quotes
                                //   "double" : require double quotes
    "undef"         : false,     // true: Require all non-global variables to be declared (prevents global leaks)
    "unused"        : false,     // true: Require all defined variables be used
    //can't see if is used/defined in another file.
    "strict"        : false,     // true: Requires all functions run in ES5 Strict Mode
    "maxparams"     : false,    // {int} Max number of formal params allowed per function
    "maxdepth"      : false,    // {int} Max depth of nested blocks (within functions)
    "maxstatements" : false,    // {int} Max number statements per function
    "maxcomplexity" : false,    // {int} Max cyclomatic complexity per function
    "maxlen"        : false    // {int} Max number of characters per line


}
